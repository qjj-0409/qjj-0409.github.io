(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{303:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"下棋游戏-xxoo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下棋游戏-xxoo"}},[t._v("#")]),t._v(" 下棋游戏（XXOO）")]),t._v(" "),a("h2",{attrs:{id:"一、项目准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、项目准备"}},[t._v("#")]),t._v(" 一、项目准备")]),t._v(" "),a("p",[t._v("两种写JavaScript代码的方式：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在script标签中写js代码")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("js代码\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("单独创建一个js文件，使用script标签的src属性引入")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("index.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("注意：两种写js的方式不能参杂使用，虽然不报错，但是仅js文件有用，<script>标签里面的内容不起作用。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("index.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的代码不起作用")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"_1、自动刷新浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、自动刷新浏览器"}},[t._v("#")]),t._v(" 1、自动刷新浏览器")]),t._v(" "),a("p",[t._v("问题：每次修改页面内容后，都要手动刷新浏览器，才能看到修改后的内容。")]),t._v(" "),a("p",[t._v("解决方法：使用 Live Server 插件，实现自动刷新浏览器。")]),t._v(" "),a("p",[t._v("作用：监视HTML或引入的CSS、js的变化，在保存文件时，该插件就会帮我们自动刷新浏览器。")]),t._v(" "),a("p",[t._v("使用方式：在HTML文件中，点击鼠标右键，再点击 open with Live Server 按钮即可。")]),t._v(" "),a("p",[t._v("注意：HTML文件所在的文件夹名称不要包含中文，否则，打开页面失败，插件功能无法生效！")]),t._v(" "),a("h3",{attrs:{id:"_2、浏览器中运行ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、浏览器中运行ts"}},[t._v("#")]),t._v(" 2、浏览器中运行TS")]),t._v(" "),a("p",[t._v("注意：浏览器中只能运行JS，无法直接运行TS，因此，需要将TS转化为JS，然后再运行。")]),t._v(" "),a("p",[t._v("浏览器中运行TS的步骤：")]),t._v(" "),a("ol",[a("li",[t._v("使用命令"),a("code",[t._v("tsc index.ts")]),t._v("将TS文件转化为JS文件。")]),t._v(" "),a("li",[t._v("在页面中，使用<script>标签引入生成的JS文件（注意是JS文件）。")])]),t._v(" "),a("p",[t._v("问题：每次修改ts文件后，都要重新运行tsc命令将TS转化为JS，很麻烦！")]),t._v(" "),a("p",[t._v("解决方法：使用tsc命令的监视模式。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ tsc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--watch")]),t._v(" index.ts\n")])])]),a("p",[t._v("解释："),a("code",[t._v("--watch")]),t._v("表示启用监视模式，只要重新保存了TS文件，就会自动调用tsc将TS转化为JS。")]),t._v(" "),a("h3",{attrs:{id:"_3、类型断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、类型断言"}},[t._v("#")]),t._v(" 3、类型断言")]),t._v(" "),a("p",[t._v("问题：调用querySelector()通过id选择器获取DOM元素时，拿到的元素类型都是Element。")]),t._v(" "),a("p",[t._v("因为无法根据id确定元素的类型，所以，该方法就返回一个宽泛的类型：元素（Element）类型。")]),t._v(" "),a("p",[t._v("不管h1还是img都是元素。")]),t._v(" "),a("p",[t._v("导致新问题：无法访问img元素的src属性了。")]),t._v(" "),a("p",[t._v("因为：Element类型只包含所有元素共有的属性和方法（比如：id属性）。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error，报错，Element元素没有src属性")]),t._v("\n")])])]),a("p",[t._v("解决方法：使用类型断言，来手动指定更加具体的类型（比如，此处应该比Element类型更加具体）")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("值 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" 更具体的类型\n")])])]),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#image'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" HTMLImageElement\n")])])]),a("p",[t._v("解释：我们确定 "),a("code",[t._v("id = 'image'")]),t._v(" 的元素是图片元素，所以，我们将类型指定为HTMLImageElement。")]),t._v(" "),a("p",[t._v("技巧：通过"),a("code",[t._v("console.dir()")]),t._v("打印DOM元素，在属性的最后面，即可看到该元素的类型。")]),t._v(" "),a("p",[t._v("使用场景：当你比TS更了解某个值的类型，并且需要指定更具体的类型时。")]),t._v(" "),a("h3",{attrs:{id:"_4、游戏演示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、游戏演示"}},[t._v("#")]),t._v(" 4、游戏演示")]),t._v(" "),a("p",[t._v("玩法：两个玩家，一个玩家使用（X），一个玩家使用（O），轮流在棋盘上下棋（点击单元格）。")]),t._v(" "),a("p",[t._v("获胜条件：横、竖、斜（对角线）三个棋子相同。")]),t._v(" "),a("p",[t._v("平局：棋盘满子，但是，不满足任何一种获胜条件。")]),t._v(" "),a("h3",{attrs:{id:"_5、游戏模板说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、游戏模板说明"}},[t._v("#")]),t._v(" 5、游戏模板说明")]),t._v(" "),a("p",[t._v("重点：运用学到的TS知识，来开发下棋游戏。")]),t._v(" "),a("p",[t._v("模板（HTML、CSS）说明：")]),t._v(" "),a("ol",[a("li",[t._v("下一步提示：给游戏面板（#bord），添加x或者o类名。")]),t._v(" "),a("li",[t._v("下棋（点击单元格）：给单元格（.cell）标签，添加x或o类名。")]),t._v(" "),a("li",[t._v("展示和隐藏获胜信息：设置获胜信息面板（#message）标签的样式属性display。")])]),t._v(" "),a("h2",{attrs:{id:"二、点击下棋"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、点击下棋"}},[t._v("#")]),t._v(" 二、点击下棋")]),t._v(" "),a("h3",{attrs:{id:"_1、单元格点击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、单元格点击"}},[t._v("#")]),t._v(" 1、单元格点击")]),t._v(" "),a("p",[t._v("效果：点击棋盘的任意单元格，单元格显示X（默认）。")]),t._v(" "),a("ol",[a("li",[t._v("获取到所有的单元格列表。")]),t._v(" "),a("li",[t._v("遍历单元格列表，给每一个单元格添加点击事件。")]),t._v(" "),a("li",[t._v("给当前被点击的单元格添加类名X。")])]),t._v(" "),a("p",[t._v("优化（1）：防止单元格重复点击，在添加事件时，使用once 属性，让单元格只能被点击一次。")]),t._v(" "),a("p",[t._v("优化（2）：使用函数声明形式的事件处理程序（代码多了后，代码结构会更清晰）。")]),t._v(" "),a("h3",{attrs:{id:"_2、切换玩家"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、切换玩家"}},[t._v("#")]),t._v(" 2、切换玩家")]),t._v(" "),a("p",[t._v("效果：玩家（X）和玩家（O）轮流交替下棋。")]),t._v(" "),a("ol",[a("li",[t._v("创建一个存储当前玩家的变量（currentPlayer），默认值为：x。")]),t._v(" "),a("li",[t._v("将添加给单元格时写死的类名 x，替换为变量（currentPlayer）的值。")]),t._v(" "),a("li",[t._v("切换到另一个玩家：在添加类名（下棋完成一步）后，根据当前玩家，得到另外一个玩家。")]),t._v(" "),a("li",[t._v("处理下一步提示：移除游戏面板中的 x 或 o 类名，添加下一个玩家对应的类名。")])]),t._v(" "),a("h3",{attrs:{id:"_3、枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、枚举"}},[t._v("#")]),t._v(" 3、枚举")]),t._v(" "),a("p",[t._v("使用变量（currentPlayer）处理当前玩家，存在的问题：")]),t._v(" "),a("p",[t._v("变量的类型是string，它的值可以是任意字符串。")]),t._v(" "),a("p",[t._v("如果不小心写错了（o --\x3e 0），代码不会报错，但功能就无法实现了，并且很难找错。")]),t._v(" "),a("p",[t._v("也就是：string类型的变量，取值太宽泛，无法很好的限制为x或o。")]),t._v(" "),a("p",[t._v("枚举是组织有关联数据的一种方式（比如：x和o就是有关联的数据）。")]),t._v(" "),a("p",[t._v("使用场景：当变量的值，"),a("strong",[t._v("只能是几个固定值中的一个")]),t._v("，应该使用"),a("strong",[t._v("枚举")]),t._v("来实现。")]),t._v(" "),a("p",[t._v("注意："),a("strong",[t._v("JS中没有枚举")]),t._v("，这是TS为了弥补JS自身不足而新增的。")]),t._v(" "),a("h4",{attrs:{id:"_3-1-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-语法"}},[t._v("#")]),t._v(" 3.1 语法")]),t._v(" "),a("p",[t._v("创建枚举的语法：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" 枚举名称 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" 成员"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 成员"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Gender "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Female"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Male "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Player "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("约定枚举名称、成员名称以大写字母开头。")]),t._v(" "),a("p",[t._v("多个成员之间使用逗号（"),a("code",[t._v(",")]),t._v("）分隔。")]),t._v(" "),a("p",[t._v("注意：枚举中的成员，根据功能自己指定！")]),t._v(" "),a("p",[t._v("注意：枚举中的成员不是键值对！")]),t._v(" "),a("h4",{attrs:{id:"_3-2-使用枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-使用枚举"}},[t._v("#")]),t._v(" 3.2 使用枚举")]),t._v(" "),a("p",[a("strong",[t._v("枚举是一种类型")]),t._v("，因此，可以其作为"),a("strong",[t._v("变量的类型注解")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Gender "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Female"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Male "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" uerGender"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Gender\n")])])]),a("p",[t._v("访问枚举（Gender）中的成员，作为变量（userGender）的值：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("userGender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Female\nuserGender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Male\n")])])]),a("p",[t._v("注意："),a("strong",[t._v("枚举成员是只读的")]),t._v("，也就是说枚举中的成员可以访问，但是不能赋值！")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("Gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Female "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误！")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-3-数字枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-数字枚举"}},[t._v("#")]),t._v(" 3.3 数字枚举")]),t._v(" "),a("p",[t._v("问题：将枚举成员赋值给变量，变量的值是什么呢？")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Gender "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Female"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Male "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" uerGender"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Female\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uerGender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])]),a("p",[a("strong",[t._v("枚举成员是有值的")]),t._v("，默认为：从 0 开始自增的数值。")]),t._v(" "),a("p",[t._v("我们把，枚举成员的值为数字的枚举，称为："),a("strong",[t._v("数字枚举")]),t._v("，默认就是数字枚举。")]),t._v(" "),a("p",[t._v("当然，也可以给枚举中的成员初始化值。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Gender "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Female "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Male "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Female => 1 Male => 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Gender "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Female "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Male "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Female => 1 Male => 100")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-4-字符串枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-字符串枚举"}},[t._v("#")]),t._v(" 3.4 字符串枚举")]),t._v(" "),a("p",[t._v("字符串枚举：枚举成员的值是字符串。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Gender "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Female "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Male "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("注意：字符串枚举没有自增长行为，因此，每个成员必须有初始值。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Female"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 女")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Male"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 男")]),t._v("\n")])])]),a("p",[t._v("总结：枚举是一组有名字的常量（只读）的集合。")]),t._v(" "),a("h4",{attrs:{id:"_3-5-使用枚举修改当前玩家"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-使用枚举修改当前玩家"}},[t._v("#")]),t._v(" 3.5 使用枚举修改当前玩家")]),t._v(" "),a("p",[t._v("效果：使用枚举代替原来的字符串类名（x和o）。")]),t._v(" "),a("ol",[a("li",[t._v("创建字符串枚举（Player），提供 X 和 O 两个成员。")]),t._v(" "),a("li",[t._v("将成员 X 的值设置为：'x'（类名）；将成员 O 的值设置为：'o'（类名）。")]),t._v(" "),a("li",[t._v("将变量（currentPlayer）的类型设置为Player枚举类型，默认值为Player.X。")]),t._v(" "),a("li",[t._v("将所有用到 x 和 o 的地方全部使用枚举成员代替。")])]),t._v(" "),a("h3",{attrs:{id:"_4、游戏判赢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、游戏判赢"}},[t._v("#")]),t._v(" 4、游戏判赢")]),t._v(" "),a("h4",{attrs:{id:"_4-1-判赢的思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-判赢的思路"}},[t._v("#")]),t._v(" 4.1 判赢的思路")]),t._v(" "),a("p",[t._v("思路：判断棋盘中，横、竖、斜（对角线）是否存在三个相同的x或o。")]),t._v(" "),a("p",[t._v("只要有一个满足条件，就说明x或o获胜了。")]),t._v(" "),a("p",[t._v("如果所有单元格都有内容，但没有获胜的情况，就说明是平局。")]),t._v(" "),a("p",[t._v("如何判断呢？")]),t._v(" "),a("p",[t._v("单元格元素列表（cells）中，每个单元格元素都有自己的索引，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"demo-imgs/01-%E5%88%A4%E8%B5%A2%E6%80%9D%E8%B7%AF.png",alt:""}})]),t._v(" "),a("p",[t._v("使用单元格索引，来表示每种获胜情况（使用数组来存储，比如：[0, 1, 2]）。")]),t._v(" "),a("p",[t._v("然后，使用一个“大”数组（外层），来存储这8种情况（因为每次判赢都要判断所有情况）。")]),t._v(" "),a("p",[t._v("判断过程：遍历这个大数组，分别判断每一种情况对应的3个单元格元素，是否都是相同的 x 或 o 类名。")]),t._v(" "),a("p",[t._v("只要有一种情况满足，就说明获胜了。")]),t._v(" "),a("h4",{attrs:{id:"_4-2-分析判赢数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-分析判赢数组"}},[t._v("#")]),t._v(" 4.2 分析判赢数组")]),t._v(" "),a("p",[t._v("数组的基本结构：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("判赢数组：每个元素又是数组（二维数组，概念知道即可）。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" winsArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("只要是数组用法都一样，比如：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问数组元素：")]),t._v("\nwinsArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [0, 1, 2]")]),t._v("\nwinsArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-3-单元格元素列表说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-单元格元素列表说明"}},[t._v("#")]),t._v(" 4.3 单元格元素列表说明")]),t._v(" "),a("p",[t._v("单元格元素类别（cells），实际上是一个伪数组。")]),t._v(" "),a("p",[t._v("伪数组的特征：具有长度（length）属性和索引。")]),t._v(" "),a("p",[t._v("伪数组的操作：1 通过索引获取元素  2 使用for循环遍历（推荐使用 forEach 方法）。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通过索引获取元素")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("使用for循环遍历")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_4-4-封装判赢函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-封装判赢函数"}},[t._v("#")]),t._v(" 4.4 封装判赢函数")]),t._v(" "),a("p",[t._v("封装函数，主要考虑：参数和返回值。")]),t._v(" "),a("p",[t._v("该函数的返回值是什么？           布尔值（判断是否获胜）")]),t._v(" "),a("p",[t._v("该函数有参数吗？是什么？       当前玩家")]),t._v(" "),a("p",[t._v("说明：判赢，就是在判断当前玩家下棋后是否获胜（玩家没下棋，不可能获胜，不需要判断）。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明函数：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkWin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("player"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Player"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用函数：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" isWin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkWin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentPlayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("技巧：如果想不到返回值和参数，可以反推，也就是从如何调用函数的角度来分析。")]),t._v(" "),a("p",[t._v("问题：什么时候判赢？       玩家点击单元格下棋后")]),t._v(" "),a("p",[t._v("步骤：")]),t._v(" "),a("ol",[a("li",[t._v("声明函数（checkWin），指定参数（player），类型注解为：Player枚举。")]),t._v(" "),a("li",[t._v("指定返回值：现在函数中写死返回 true 或 false。")]),t._v(" "),a("li",[t._v("在给单元格添加类名后（下棋后），调用函数 checkWin，拿到函数返回值。")]),t._v(" "),a("li",[t._v("判断函数返回值是否为 true，如果是，说明当前玩家获胜了。")])]),t._v(" "),a("h4",{attrs:{id:"_4-5-实现判赢函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-实现判赢函数"}},[t._v("#")]),t._v(" 4.5 实现判赢函数")]),t._v(" "),a("p",[t._v("思路：遍历判赢数组，分别判断每种情况对应的 3 个单元格元素，是否同时包含当前玩家的类名。")]),t._v(" "),a("p",[t._v("问题：使用哪种方式遍历数组呢？")]),t._v(" "),a("p",[a("strong",[t._v("只要有一种情况满足")]),t._v("，就表示玩家获胜，后续的情况就没有必要再遍历，因此，数组遍历时可以终止。")]),t._v(" "),a("p",[t._v("判赢函数的返回值是布尔值，如果玩家获胜（有一种情况满足），就返回 true；否则，返回 false。")]),t._v(" "),a("p",[t._v("数组的 some 方法：1 遍历数组时可终止     2 方法返回值为 true 或 false。")]),t._v(" "),a("p",[t._v("思路：遍历判赢数组，分别判断每种情况对应的 3 个单元格元素，是否同时包含当前玩家的类名。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用 some 方法遍历数组，并将 some 方法的返回值作为判赢函数的返回结果。")])]),t._v(" "),a("li",[a("p",[t._v("在 some 方法的回调函数中，获取到每种获胜情况对应的 3 个单元格元素。")])]),t._v(" "),a("li",[a("p",[t._v("判断这 3 个单元格元素是否同时包含当前玩家的类名。")]),t._v(" "),a("p",[t._v("重点：")]),t._v(" "),a("p",[t._v("1 元素是否包含类名 classList.contains()")]),t._v(" "),a("p",[t._v("2 同时包含（逻辑运算符 &&）")])]),t._v(" "),a("li",[a("p",[t._v("如果包含（玩家获胜），就在回调函数中返回 true 停止循环；否则，返回 false ，继续下一次循环。")])])]),t._v(" "),a("h4",{attrs:{id:"_4-6-优化判赢函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-优化判赢函数"}},[t._v("#")]),t._v(" 4.6 优化判赢函数")]),t._v(" "),a("ol",[a("li",[t._v("去掉判赢函数的中间变量（isWin、cell1、cell2、cell3）。")]),t._v(" "),a("li",[t._v("封装函数（hasClass）：判断DOM元素是否包含某个类名。")])]),t._v(" "),a("h4",{attrs:{id:"_4-7-判断平局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-判断平局"}},[t._v("#")]),t._v(" 4.7 判断平局")]),t._v(" "),a("p",[t._v("思路：创建变量（steps），记录已下棋的次数，判断steps是否等于9，如果等于说明平局。")]),t._v(" "),a("p",[t._v("注意：先判赢，再判断平局！")]),t._v(" "),a("ol",[a("li",[t._v("创建变量（steps），默认值为0。")]),t._v(" "),a("li",[t._v("在玩家下棋后，让steps加1。")]),t._v(" "),a("li",[t._v("在判赢的代码后面，判断steps是否等于9。")]),t._v(" "),a("li",[t._v("如果等于9说明是平局，游戏结束，就直接return，不再执行后续代码。")])]),t._v(" "),a("h4",{attrs:{id:"_4-8-展示获胜信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-展示获胜信息"}},[t._v("#")]),t._v(" 4.8 展示获胜信息")]),t._v(" "),a("p",[t._v("效果：在获胜或平局时，展示相应信息。")]),t._v(" "),a("ol",[a("li",[t._v("获取到与获胜信息相关的两个DOM元素：1 #message  2 #winner。")]),t._v(" "),a("li",[t._v("显示获胜信息面板（通过style属性实现）。")]),t._v(" "),a("li",[t._v("展示获胜信息：如果获胜，展示“X赢了！”或“O赢了！”；如果是平局，展示“平局”。")])]),t._v(" "),a("h3",{attrs:{id:"_5、重新游戏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、重新游戏"}},[t._v("#")]),t._v(" 5、重新游戏")]),t._v(" "),a("p",[t._v("效果：点击重新开始游戏，重新开始下棋游戏。")]),t._v(" "),a("p",[t._v("说明：重新开始游戏，实际上就是要重置游戏中的所有数据，恢复到初始状态。")]),t._v(" "),a("p",[t._v("比如：隐藏获胜信息、重置下棋次数、清空棋盘等等。")]),t._v(" "),a("ol",[a("li",[t._v("获取到重新开始按钮（#restart），并绑定点击事件。")]),t._v(" "),a("li",[t._v("在点击事件中，重置游戏数据。")]),t._v(" "),a("li",[t._v("隐藏获胜信息、清空棋盘、移除单元格点击事件、重新给单元格绑定点击事件。")]),t._v(" "),a("li",[t._v("重置下棋次数、重置默认玩家为x，重置下棋提示为x。")])]),t._v(" "),a("p",[t._v("优化重新游戏功能：")]),t._v(" "),a("p",[t._v("原来，下棋分为：1 第一次游戏    2 重新开始游戏")]),t._v(" "),a("p",[t._v("现在，将第一次游戏，也看做是“重新开始游戏”，就可以去掉第一次游戏时重复的初始化操作了。")]),t._v(" "),a("ol",[a("li",[t._v("将重新开始按钮的事件处理程序修改为：函数声明形式（startGame）。")]),t._v(" "),a("li",[t._v("之间调用函数（startGame），来开始游戏。")]),t._v(" "),a("li",[t._v("移除变量steps、currentPlayer的默认值，并添加明确的类型注解。")]),t._v(" "),a("li",[t._v("移除给单元格绑定事件的代码。")])]),t._v(" "),a("h2",{attrs:{id:"三、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、总结"}},[t._v("#")]),t._v(" 三、总结")]),t._v(" "),a("p",[t._v("下棋游戏（XXOO）")]),t._v(" "),a("ol",[a("li",[t._v("使用学到的TS、Web开发知识，从零开始完成了下棋游戏。")]),t._v(" "),a("li",[t._v("TS知识：变量声明、枚举、类型断言、函数（参数、返回值）等。")]),t._v(" "),a("li",[t._v("枚举：是一组有名字的常量的集合，用来组织有关联的数据。")]),t._v(" "),a("li",[t._v("类型断言：在我们比TS更明确变量的类型时，用来指定具体类型。")]),t._v(" "),a("li",[t._v("函数封装：主要考虑参数和返回值，也就是接受要处理的数据，返回处理后的结果。")]),t._v(" "),a("li",[t._v("实现功能：分步骤实现，完成一步，也验证一步（先实现，再优化）。")]),t._v(" "),a("li",[t._v("DOM操作：获取元素、添加移除事件、事件对象、样式操作、文本内容。")]),t._v(" "),a("li",[t._v("伪数组：具有长度（length）属性和索引（长得像、操作也像数组）。")])]),t._v(" "),a("h2",{attrs:{id:"扩展知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展知识点"}},[t._v("#")]),t._v(" 扩展知识点")]),t._v(" "),a("h3",{attrs:{id:"_1、css3-not-选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、css3-not-选择器"}},[t._v("#")]),t._v(" 1、CSS3 :not 选择器")]),t._v(" "),a("p",[t._v("定义和用法：")]),t._v(" "),a("p",[t._v(":not("),a("i",[t._v("selector")]),t._v(") 选择器匹配非指定元素/选择器的每个元素。")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置非 <p> 元素的所有元素的背景色 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(":not(p)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #ff0000\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("案例中：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 游戏面板棋盘 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".game-board")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 471px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 471px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".game-board.x .cell:not(.x):not(.o):hover:before")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'X'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #ccc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".game-board.o .cell:not(.x):not(.o):hover:before")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'O'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #ccc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2、eventtarget-addeventlistener-type-listener-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、eventtarget-addeventlistener-type-listener-options"}},[t._v("#")]),t._v(" 2、EventTarget.addEventListener(type, listener, options)")]),t._v(" "),a("p",[t._v("addEventListener()事件的参数约定有三种情况：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useCapture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useCapture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wantsUntrusted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Gecko/Mozilla only")]),t._v("\n")])])]),a("p",[t._v("其中第二种的第三个参数"),a("code",[t._v("useCapture")]),t._v("表示：控制监听器是在捕获阶段执行还是在冒泡阶段执行，true表示在捕获阶段执行，false表示在冒泡阶段执行，默认值是false。")]),t._v(" "),a("p",[t._v("第一种方式的option选项：")]),t._v(" "),a("p",[t._v("一个指定有关"),a("code",[t._v("listener")]),t._v("属性的可选参数对象。可用的选项如下：")]),t._v(" "),a("ul",[a("li",[t._v("capture："),a("code",[t._v("Boolean")]),t._v("，表示"),a("code",[t._v("listener")]),t._v("会在该类型的事件捕获阶段传播到该"),a("code",[t._v("EventTarget")]),t._v("时触发。")]),t._v(" "),a("li",[t._v("once："),a("code",[t._v("Boolean")]),t._v("，表示"),a("code",[t._v("listener")]),t._v("在添加之后最多只调用一次。如果是"),a("code",[t._v("true")]),t._v("，"),a("code",[t._v("listener")]),t._v("会在其被调用之后自动移除。")]),t._v(" "),a("li",[t._v("passive："),a("code",[t._v("Boolean")]),t._v("，设置为true时，表示"),a("code",[t._v("listener")]),t._v("永远不会调用"),a("code",[t._v("preventDefault()")]),t._v("。如果"),a("code",[t._v("listener")]),t._v("仍然调用了这个函数，客户端将会忽略它并抛出一个控制台警告。")]),t._v(" "),a("li",[t._v("mozSystemGroup：只能在 XBL 或者 Firefox' chrome 使用，这是个"),a("code",[t._v("Boolean")]),t._v("，表示"),a("code",[t._v("listener")]),t._v("被添加到 system group。")])]),t._v(" "),a("p",[t._v("案例中：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 单元格点击：\n * 1.获取到所有的单元格列表。\n * 2.遍历单元格列表，给每一个单元格添加点击事件。\n * 3.给当前被点击的单元格添加类名 x。\n *\n * 优化（1）：防止单元格重复点击，在添加事件时，使用once 属性，让单元格只能被点击一次。\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cells "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.cell'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cell "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" HTMLDivElement\n  cell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log('click', event.target)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" HTMLDivElement\n    target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" once"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3、dom元素-classlist-contains"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、dom元素-classlist-contains"}},[t._v("#")]),t._v(" 3、Dom元素.classList.contains()")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("classList.contains(oldClassName)")]),t._v(" "),a("p",[t._v("确定元素中是否包含指定的类名，返回值为true/false；")])]),t._v(" "),a("li",[a("p",[t._v("classList.add(newClassName)")]),t._v(" "),a("p",[t._v("添加新的类名，如已经存在，取消添加；")])]),t._v(" "),a("li",[a("p",[t._v("classList.remove(oldClassName)")]),t._v(" "),a("p",[t._v("移除已经存在的类名；")])]),t._v(" "),a("li",[a("p",[t._v("classList.toggle(className)")]),t._v(" "),a("p",[t._v("如果classList中存在给定的值，删除它，否则，添加它；")])]),t._v(" "),a("li",[a("p",[t._v("classList.replace(oldClassName, newClassName)")]),t._v(" "),a("p",[t._v("类名替换，新类newClassName替换老类oldClassName；")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);