(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{273:function(t,s,a){t.exports=a.p+"assets/img/01-ts&js.14a5bce9.png"},274:function(t,s,a){t.exports=a.p+"assets/img/02-ts&es6&es5.05e08c3b.png"},275:function(t,s,a){t.exports=a.p+"assets/img/03-typescript_compiler.d958cf01.png"},276:function(t,s,a){t.exports=a.p+"assets/img/04-TypeScriptTransformJavaScript.f93a3d72.png"},277:function(t,s,a){t.exports=a.p+"assets/img/05-runtscrrror.b02cddf9.png"},278:function(t,s,a){t.exports=a.p+"assets/img/06-powerShell.02130b86.png"},279:function(t,s,a){t.exports=a.p+"assets/img/07-powerShellOrder.ad1f808a.png"},295:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"一、typescript基本介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、typescript基本介绍"}},[t._v("#")]),t._v(" 一、TypeScript基本介绍")]),t._v(" "),n("h2",{attrs:{id:"一、简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、简介"}},[t._v("#")]),t._v(" 一、简介")]),t._v(" "),n("h3",{attrs:{id:"_1-1-什么是javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是javascript"}},[t._v("#")]),t._v(" 1.1 什么是JavaScript?")]),t._v(" "),n("p",[t._v("JavaScript（缩写：JS）是一种运行在客户端（比如：浏览器）中的编程语言。")]),t._v(" "),n("p",[t._v("当应用于浏览器时，为网站提供动态交互特性，让网页“动起来”。")]),t._v(" "),n("p",[t._v("JavaScript的运行环境：1."),n("strong",[t._v("浏览器")]),t._v("；2."),n("strong",[t._v("Node.js")]),t._v("。")]),t._v(" "),n("p",[t._v("Node.js让JavaScript摆脱了浏览器的束缚，可以实现"),n("strong",[t._v("服务端")]),t._v("/"),n("strong",[t._v("桌面端")]),t._v("编程等。")]),t._v(" "),n("p",[t._v("其他：微信小程序、微信小游戏等等。")]),t._v(" "),n("p",[t._v("总结：JavaScript既能运行在浏览器中，也可以运行在Node.js中，前后端通吃，无所不能。")]),t._v(" "),n("h3",{attrs:{id:"_1-2-什么是typescript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-什么是typescript"}},[t._v("#")]),t._v(" 1.2 什么是TypeScript?")]),t._v(" "),n("p",[t._v("TypeScript 是 JavaScript 的一个超集，支持 ECMAScript 6 标准（"),n("a",{attrs:{href:"https://www.runoob.com/w3cnote/es6-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 教程"),n("OutboundLink")],1),t._v("）。")]),t._v(" "),n("p",[t._v("TypeScript 由微软开发的自由和开源的编程语言。")]),t._v(" "),n("p",[t._v("TypeScript 设计目标是开发大型应用，它可以编译成纯 JavaScript，编译出来的 JavaScript 可以运行在任何浏览器上。")]),t._v(" "),n("p",[t._v("TypeScript 是一种给 JavaScript 添加特性的语言扩展。增加的功能包括：")]),t._v(" "),n("ul",[n("li",[t._v("类型批注和编译时类型检查")]),t._v(" "),n("li",[t._v("类型推断")]),t._v(" "),n("li",[t._v("类型擦除")]),t._v(" "),n("li",[t._v("接口")]),t._v(" "),n("li",[t._v("枚举")]),t._v(" "),n("li",[t._v("Mixin")]),t._v(" "),n("li",[t._v("泛型编程")]),t._v(" "),n("li",[t._v("名字空间")]),t._v(" "),n("li",[t._v("元组")]),t._v(" "),n("li",[t._v("Await")])]),t._v(" "),n("p",[t._v("以下功能是从 ECMA 2015 反向移植而来：")]),t._v(" "),n("ul",[n("li",[t._v("类")]),t._v(" "),n("li",[t._v("模块")]),t._v(" "),n("li",[t._v("lambda 函数的箭头语法")]),t._v(" "),n("li",[t._v("可选参数以及默认参数")])]),t._v(" "),n("h2",{attrs:{id:"二、javascript-与-typescript-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、javascript-与-typescript-的区别"}},[t._v("#")]),t._v(" 二、JavaScript 与 TypeScript 的区别")]),t._v(" "),n("p",[t._v("TypeScript（简称：TS）是JavaScript的"),n("strong",[t._v("超集")]),t._v("（JS有的TS都有）。")]),t._v(" "),n("p",[t._v("TypeScript = "),n("strong",[t._v("Type")]),t._v(" + JavaScript（为JS添加了"),n("strong",[t._v("类型系统")]),t._v("）。")]),t._v(" "),n("p",[t._v("TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法，因此现有的 JavaScript 代码可与 TypeScript 一起工作无需任何修改，TypeScript 通过类型注解提供编译时的静态类型检查。")]),t._v(" "),n("p",[t._v("TypeScript 可处理已有的 JavaScript 代码，并只对其中的 TypeScript 代码进行编译。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(273),alt:""}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(274),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"typescript相比javascript的优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#typescript相比javascript的优势"}},[t._v("#")]),t._v(" TypeScript相比JavaScript的优势：")]),t._v(" "),n("p",[t._v("JS的类型系统存在“先天缺陷”，绝大部分错误都是类型错误（Uncaught TypeError）。")]),t._v(" "),n("ul",[n("li",[t._v("优势一："),n("strong",[t._v("类型化思维")]),t._v("，使得开发更加严谨，提前发现错误，"),n("strong",[t._v("减少改Bug时间")]),t._v("。")]),t._v(" "),n("li",[t._v("优势二："),n("strong",[t._v("类型系统")]),t._v("提高了代码可读性，并使维护和重构代码更加容易。")]),t._v(" "),n("li",[t._v("优势三：补充了"),n("strong",[t._v("接口、枚举")]),t._v("等开发大型应用时JS缺失的功能。")])]),t._v(" "),n("p",[n("strong",[t._v("Vue3")]),t._v(" 源码使用了TS重写，释放出重要信号：TS是趋势。")]),t._v(" "),n("p",[n("strong",[t._v("Angular")]),t._v("默认支持TS；"),n("strong",[t._v("React")]),t._v("与TS完美配合是很多大型项目的首选。")]),t._v(" "),n("h2",{attrs:{id:"三、开发工具介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、开发工具介绍"}},[t._v("#")]),t._v(" 三、开发工具介绍")]),t._v(" "),n("p",[t._v("1、写代码的工具：Visual Studio Code（简称：VSCode），微软开发的代码编辑工具。")]),t._v(" "),n("p",[t._v("2、运行TS/JS代码的工具：Node.js，一个基于Chrome浏览器V8解析引擎的JavaScript运行环境。")]),t._v(" "),n("p",[t._v("3、安装解析TS的工具包")]),t._v(" "),n("p",[t._v("问题：为什么要安装这个工具包？")]),t._v(" "),n("p",[t._v("答案：")]),t._v(" "),n("ul",[n("li",[t._v("Node.js/浏览器，只认识JS代码，不认识TS代码。")]),t._v(" "),n("li",[t._v("需要先将TS代码转化为JS，然后就可以在Node.js/浏览器中运行了。")])]),t._v(" "),n("p",[t._v("npm安装TypeScript")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" typescript\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# typescript：就是用来解析TS的工具包。提供了tsc命令，实现了TS->JS的转化。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm：用来安装前端开发中用到的包，是安装Node.js时自动安装的。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# i(install)：表示安装")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -g(-global)：全局标识，可以在任意目录中使用该工具。")]),t._v("\n")])])]),n("p",[t._v("安装完成后我们可以使用 "),n("strong",[t._v("tsc")]),t._v(" 命令来执行 TypeScript 的相关代码，以下是查看版本号：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ tsc "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\nVersion "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),t._v(".2\n")])])]),n("p",[t._v("新建一个app.ts的文件，代码如下：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("通常我们使用"),n("code",[t._v(".ts")]),t._v("作为TypeScript代码文件的拓展名。然后执行以下命令将TypeScript转换成JavaScript代码：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("tsc app.ts\n")])])]),n("p",[n("img",{attrs:{src:a(275),alt:""}})]),t._v(" "),n("p",[t._v("这时候在当前目录下（和app.ts同一目录）就会生成一个app.js文件，代码如下：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("使用node命令来执行app.js文件：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" app.js\nHello World\n")])])]),n("p",[t._v("TypeScript 转换为 JavaScript 过程如下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(276),alt:""}})]),t._v(" "),n("blockquote",[n("p",[t._v("TypeScript Compiler：TypeScript编译器")])]),t._v(" "),n("h3",{attrs:{id:"问题-执行tsc命令时报错"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题-执行tsc命令时报错"}},[t._v("#")]),t._v(" 问题：执行tsc命令时报错")]),t._v(" "),n("p",[t._v("（无法加载文件 C:\\Users\\Administrator\\AppData\\Roaming\\npm\\tsc.ps1,因为在此系统上禁止运行脚本）")]),t._v(" "),n("p",[t._v("全局安装了Typescript运行环境,运行时报错：")]),t._v(" "),n("p",[n("strong",[t._v("无法加载文件 C:\\Users\\Administrator\\AppData\\Roaming\\npm\\tsc.ps1,因为在此系统上禁止运行脚本")]),t._v("!")]),t._v(" "),n("p",[n("img",{attrs:{src:a(277),alt:""}})]),t._v(" "),n("p",[t._v("解决：")]),t._v(" "),n("p",[t._v("以管理员身份运行powerShell("),n("strong",[t._v("一定要以管路员身份打开")]),t._v(")：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(278),alt:""}})]),t._v(" "),n("p",[t._v("命令行:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ set-ExecutionPolicy RemoteSigned\n")])])]),n("p",[n("img",{attrs:{src:a(279),alt:""}})]),t._v(" "),n("p",[t._v("敲 A 或者 Y 即可，ok，完成！")]),t._v(" "),n("h3",{attrs:{id:"简化执行ts的步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简化执行ts的步骤"}},[t._v("#")]),t._v(" 简化执行TS的步骤")]),t._v(" "),n("p",[t._v("问题：每次修改代码后，都要重复执行两个命令才能执行TS代码，太繁琐。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行TS的两个步骤：")]),t._v("\n$ tsc hello.ts\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" hello.js\n")])])]),n("p",[t._v("简化方式：使用ts-node包，“直接”在Node.js中执行TS代码。")]),t._v(" "),n("p",[t._v("安装命令：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" ts-node\n")])])]),n("p",[t._v("解释：ts-node包内部偷偷的将TS->JS，然后执行JS代码。")]),t._v(" "),n("p",[t._v("ts-node包提供了命令ts-node，用来执行TS代码。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ ts-node hello.ts\n你好\n")])])]),n("h2",{attrs:{id:"四、基础语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、基础语法"}},[t._v("#")]),t._v(" 四、基础语法")]),t._v(" "),n("h3",{attrs:{id:"_1、typescript-保留关键字"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、typescript-保留关键字"}},[t._v("#")]),t._v(" 1、TypeScript 保留关键字")]),t._v(" "),n("p",[t._v("TypeScript 保留关键字如下表所示：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("break")]),t._v(" "),n("th",[t._v("as")]),t._v(" "),n("th",[t._v("catch")]),t._v(" "),n("th",[t._v("switch")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("case")]),t._v(" "),n("td",[t._v("if")]),t._v(" "),n("td",[t._v("throw")]),t._v(" "),n("td",[t._v("else")])]),t._v(" "),n("tr",[n("td",[t._v("var")]),t._v(" "),n("td",[t._v("number")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("get")])]),t._v(" "),n("tr",[n("td",[t._v("module")]),t._v(" "),n("td",[t._v("type")]),t._v(" "),n("td",[t._v("instanceof")]),t._v(" "),n("td",[t._v("typeof")])]),t._v(" "),n("tr",[n("td",[t._v("public")]),t._v(" "),n("td",[t._v("private")]),t._v(" "),n("td",[t._v("enum")]),t._v(" "),n("td",[t._v("export")])]),t._v(" "),n("tr",[n("td",[t._v("finally")]),t._v(" "),n("td",[t._v("for")]),t._v(" "),n("td",[t._v("while")]),t._v(" "),n("td",[t._v("void")])]),t._v(" "),n("tr",[n("td",[t._v("null")]),t._v(" "),n("td",[t._v("super")]),t._v(" "),n("td",[t._v("this")]),t._v(" "),n("td",[t._v("new")])]),t._v(" "),n("tr",[n("td",[t._v("in")]),t._v(" "),n("td",[t._v("return")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("false")])]),t._v(" "),n("tr",[n("td",[t._v("any")]),t._v(" "),n("td",[t._v("extends")]),t._v(" "),n("td",[t._v("static")]),t._v(" "),n("td",[t._v("let")])]),t._v(" "),n("tr",[n("td",[t._v("package")]),t._v(" "),n("td",[t._v("implements")]),t._v(" "),n("td",[t._v("interface")]),t._v(" "),n("td",[t._v("function")])]),t._v(" "),n("tr",[n("td",[t._v("new")]),t._v(" "),n("td",[t._v("try")]),t._v(" "),n("td",[t._v("yield")]),t._v(" "),n("td",[t._v("const")])]),t._v(" "),n("tr",[n("td",[t._v("continue")]),t._v(" "),n("td",[t._v("do")]),t._v(" "),n("td"),t._v(" "),n("td")])])]),t._v(" "),n("h3",{attrs:{id:"_2、空白和换行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、空白和换行"}},[t._v("#")]),t._v(" 2、空白和换行")]),t._v(" "),n("p",[t._v("TypeScript 会忽略程序中出现的空格、制表符和换行符。")]),t._v(" "),n("p",[t._v("空格、制表符通常用来缩进代码，使代码易于阅读和理解。")]),t._v(" "),n("h3",{attrs:{id:"_3、typescript-区分大小写"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、typescript-区分大小写"}},[t._v("#")]),t._v(" 3、TypeScript 区分大小写")]),t._v(" "),n("p",[t._v("TypeScript 区分大写和小写字符。")]),t._v(" "),n("h3",{attrs:{id:"_4、分号是可选的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、分号是可选的"}},[t._v("#")]),t._v(" 4、分号是可选的")]),t._v(" "),n("p",[t._v("每行指令都是一段语句，你可以使用分号或不使用， 分号在 TypeScript 中是可选的，建议使用。")]),t._v(" "),n("p",[t._v("以下代码都是合法的：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Google"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("如果语句写在同一行则一定需要使用分号来分隔，否则会报错，如：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Google"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"_4、typescript-注释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、typescript-注释"}},[t._v("#")]),t._v(" 4、TypeScript 注释")]),t._v(" "),n("p",[t._v("注释是一个良好的习惯，虽然很多程序员讨厌注释，但还是建议你在每段代码写上文字说明。")]),t._v(" "),n("p",[t._v("注释可以提高程序的可读性。")]),t._v(" "),n("p",[t._v("注释可以包含有关程序一些信息，如代码的作者，有关函数的说明等。")]),t._v(" "),n("p",[t._v("编译器会忽略注释。")]),t._v(" "),n("h3",{attrs:{id:"_5、typescript-支持两种类型的注释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、typescript-支持两种类型的注释"}},[t._v("#")]),t._v(" 5、TypeScript 支持两种类型的注释")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("单行注释 ( // )")]),t._v(" − 在 // 后面的文字都是注释内容。")]),t._v(" "),n("li",[n("strong",[t._v("多行注释 (/* */)")]),t._v(" − 这种注释可以跨越多行。")])]),t._v(" "),n("h3",{attrs:{id:"_6、typescript与面向对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、typescript与面向对象"}},[t._v("#")]),t._v(" 6、TypeScript与面向对象")]),t._v(" "),n("p",[t._v("TypeScript是一种面向对象的编程语言。")]),t._v(" "),n("p",[t._v("面向对象主要有两个概念：对象和类。")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("对象")]),t._v("：对象是类的一个实例（"),n("strong",[t._v("对象不是找个女朋友")]),t._v("），有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。")]),t._v(" "),n("li",[n("strong",[t._v("类")]),t._v("：类是一个模板，它描述一类对象的行为和状态。")]),t._v(" "),n("li",[n("strong",[t._v("方法")]),t._v("：方法是类的操作的实现步骤。")])]),t._v(" "),n("p",[t._v("TypeScript 面向对象编程实例：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Site")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Site")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("以上实例定义了一个类 Site，该类有一个方法 name()，该方法在终端上输出字符串 Runoob。")]),t._v(" "),n("p",[t._v("new 关键字创建类的对象，该对象调用方法 name()。")]),t._v(" "),n("p",[t._v("编译后生成的 JavaScript 代码如下：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Site "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @class */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Site")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Site")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("name")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Site"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Site")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("执行以上 JavaScript 代码，输出结果如下:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("Runoob\n")])])]),n("h2",{attrs:{id:"五、基础类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、基础类型"}},[t._v("#")]),t._v(" 五、基础类型")]),t._v(" "),n("p",[t._v("TypeScript中的数据类型分为两个类：1.原始类型（基本数据类型） 2.对象类型（复杂数据类型）")]),t._v(" "),n("p",[t._v("常用的基本数据类型有5个：number/string/boolean/undefined/null")]),t._v(" "),n("p",[t._v("TypeScript 包含的数据类型如下表:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("数据类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("任意类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("any")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("声明为 any 的变量可以为其赋予任意类型的值。"),n("br"),n("code",[t._v("let a: any = 1")]),n("br"),n("code",[t._v("a = '你好'")]),n("br"),n("code",[t._v("a = false")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("数字类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("number")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("双精度 64 位浮点值。它可以用来表示整数和分数。"),n("br"),n("code",[t._v("let binaryLiteral: number = 0b1010; // 二进制")]),n("br"),n("code",[t._v("let octalLiteral: number = 0o744; // 八进制")]),n("br"),n("code",[t._v("let decLiteral: number = 6; // 十进制")]),n("br"),n("code",[t._v("let hexLiteral: number = 0xf00d; // 十六进制")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("字符串类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("一个字符系列，使用单引号（"),n("strong",[t._v("'")]),t._v("）或双引号（"),n("strong",[t._v('"')]),t._v("）来表示字符串类型。反引号来定义多行文本和内嵌表达式。"),n("br"),n("code",[t._v('let myName: string = "Runoob";')]),n("br"),n("code",[t._v("let years: number = 5;")]),n("br"),n("code",[t._v("let words: string =")]),t._v("您好，今年是 ${ myName} 发布 ​${ years + 1} 周年"),n("code",[t._v(";")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("布尔类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("表示逻辑值：true 和 false。"),n("br"),n("code",[t._v("let flag: boolean = true;")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("数组类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("无")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("声明变量为数组。"),n("br"),n("code",[t._v("// 在元素类型后面加上[]")]),n("br"),n("code",[t._v("let arr: number[] = [1, 2];")]),n("br"),n("code",[t._v("// 或者使用数组泛型，Array<元素类型>")]),n("br"),n("code",[t._v("let arr: Array<number> = [1, 2];")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("元组 Tuple")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("无")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("元组类型用来表示已知元素数量和类型的数组，各元素的类型不必相同，对应位置的类型需要相同。"),n("br"),n("code",[t._v("let x: [string, number];")]),n("br"),n("code",[t._v("x = ['Runoob', 1]; // 运行正常")]),n("br"),n("code",[t._v("x = [1, 'Runoob']; // 报错")]),n("br"),n("code",[t._v("console.log(x[0]); // 输出 Runoob")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("枚举")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("enum")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("枚举类型用于定义数值集合。"),n("br"),n("code",[t._v("enum Color {Red, Green, Blue};")]),n("br"),n("code",[t._v("let c: Color = Color.Blue;")]),n("br"),n("code",[t._v("console.log(c); // 输出 2")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("void")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("void")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("用于标识方法返回值的类型，表示该方法没有返回值。"),n("br"),n("code",[t._v('function hello():void { alert("Hello Runoob"); }')])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("表示对象值缺失。")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("undefined")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("undefined")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("用于初始化变量为一个未定义的值")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("never")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("never")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("never 是其它类型（包括 null 和 undefined）的子类型，代表从不会出现的值。")])])])]),t._v(" "),n("p",[t._v("**注意：**TypeScript 和 JavaScript 没有整数类型。")]),t._v(" "),n("h3",{attrs:{id:"any-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#any-类型"}},[t._v("#")]),t._v(" Any 类型")]),t._v(" "),n("p",[t._v("任意值是 TypeScript 针对编程时类型不明确的变量使用的一种数据类型，它常用于以下三种情况。")]),t._v(" "),n("p",[t._v("1、变量的值会动态改变时，比如来自用户的输入，任意值类型可以让这些变量跳过编译阶段的类型检查，示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数字类型")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am who I am'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串类型")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 布尔类型")]),t._v("\n")])])]),n("p",[t._v("改写现有代码时，任意值允许在编译时可选择地包含或移除类型检查。你可能认为Object有相似的作用，就像它在其他语言中那样。但是Object类型的变量只是允许你给它赋任意值-但是却不能够在它上面调用任意的方法，即便它真的有这些方法：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifItExists")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确，ifItExists方法在运行时可能存在，但这里并不会检查")]),t._v("\nx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" prettySure"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nprettySure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error：类型“Object”上的属性“toFixed”不存在。")]),t._v("\n")])])]),n("p",[t._v("定义存储各种类型数据的数组时，示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fine'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 100, 'fine']")]),t._v("\n")])])]),n("h4",{attrs:{id:"任意值的属性和方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#任意值的属性和方法"}},[t._v("#")]),t._v(" 任意值的属性和方法")]),t._v(" "),n("p",[t._v("在任意值上访问任何属性都是允许的：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" anyThing"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anyThing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anyThing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("也允许调用任何方法：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" anyThing"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),t._v("\nanyThing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jerry'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nanyThing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jerry'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nanyThing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFirstName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cat'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("可以认为，声明一个变量为任意值之后，对它的任何操作，返回的内容的类型都是任意值。")]),t._v(" "),n("h4",{attrs:{id:"未声明类型的变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#未声明类型的变量"}},[t._v("#")]),t._v(" 未声明类型的变量")]),t._v(" "),n("p",[t._v("变量如果在声明的时候，未指定其类型，那么它会被识别为任意值类型：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" something\nsomething "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'seven'")]),t._v("\nsomething "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n\nsomething"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("等价于")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" something"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v("\nsomething "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'seven'")]),t._v("\nsomething "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n\nsomething"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"void"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#void"}},[t._v("#")]),t._v(" Void")]),t._v(" "),n("p",[t._v("某种程度上来说，void类型像是与any类型相反，它表示没有任何类型。当一个函数没有返回值时，你通常会见到其返回值类型是void：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("warnUser")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is my warning message"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("声明一个void类型的变量没有什么大用，因为你只能为它赋予undefined和null：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" unusable"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译通过")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" unusable2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译通过")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" unusable3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错：不能将类型“number”分配给类型“void”。")]),t._v("\n")])])]),n("h3",{attrs:{id:"null-和-undefined"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#null-和-undefined"}},[t._v("#")]),t._v(" Null 和 Undefined")]),t._v(" "),n("h4",{attrs:{id:"null"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[t._v("#")]),t._v(" null")]),t._v(" "),n("p",[t._v('在 JavaScript 中 null 表示 "什么都没有"。')]),t._v(" "),n("p",[t._v("null是一个只有一个值的特殊类型。表示一个空对象引用。")]),t._v(" "),n("p",[t._v("用 typeof 检测 null 返回是 object。")]),t._v(" "),n("h4",{attrs:{id:"undefined"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" undefined")]),t._v(" "),n("p",[t._v("在 JavaScript 中, undefined 是一个没有设置值的变量。")]),t._v(" "),n("p",[t._v("typeof 一个没有值的变量会返回 undefined。")]),t._v(" "),n("p",[t._v("Null 和 Undefined 是其他任何类型（包括 void）的子类型，可以赋值给其它类型，如数字类型，此时，赋值后的类型会变成 null 或 undefined。而在TypeScript中启用严格的空校验（--strictNullChecks）特性，就可以使得null 和 undefined 只能被赋值给 void 或本身对应的类型，示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不启用 --strictNullChecks")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" u"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译通过")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译通过")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用 --strictNullChecks")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行正确")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行错误")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行错误")]),t._v("\n")])])]),n("p",[t._v("上面的例子中变量 x 只能是数字类型。如果一个类型可能出现 null 或 undefined， 可以用 | 来支持多种类型，示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用 --strictNullChecks")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行正确")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行正确")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行正确")]),t._v("\n")])])]),n("p",[t._v("与"),n("code",[t._v("void")]),t._v("的区别是，"),n("code",[t._v("undefined")]),t._v("和"),n("code",[t._v("null")]),t._v("是所有类型的子类型。也就是说"),n("code",[t._v("undefined")]),t._v("类型的变量，可以赋值给"),n("code",[t._v("number")]),t._v("类型的变量，而"),n("code",[t._v("void")]),t._v("类型的变量不能赋值给"),n("code",[t._v("number")]),t._v("类型的变量。")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样也不会报错")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" u"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" u\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型“void”不能分配给类型“number”。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" u"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" u\n")])])]),n("h3",{attrs:{id:"never-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#never-类型"}},[t._v("#")]),t._v(" never 类型")]),t._v(" "),n("p",[t._v("never 是任何类型（包括 null 和 undefined）的子类型，代表从不会出现的值，可以赋值给任何类型。然而，"),n("em",[t._v("没有")]),t._v("类型是"),n("code",[t._v("never")]),t._v("的子类型或可以赋值给"),n("code",[t._v("never")]),t._v("类型（除了"),n("code",[t._v("never")]),t._v("本身之外）。 即使 "),n("code",[t._v("any")]),t._v("也不可以赋值给"),n("code",[t._v("never")]),t._v("。")]),t._v(" "),n("p",[t._v("在函数中它通常表现为抛出异常或无法执行到终止点（例如无限循环）。")]),t._v(" "),n("p",[t._v("下面是一些返回never类型的函数：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回never的函数抛出异常")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推断的返回值类型为never")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fail")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Something failed"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回never的函数必须存在无法达到的终点")]),t._v("\nfuncion "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("infinteLoop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行错误，数字类型不能转为 never 类型")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行正确，never 类型可以赋值给 never类型")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exception'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行正确，never 类型可以赋值给 数字类型")]),t._v("\ny "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exception'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回值为 never 的函数可以是抛出异常的情况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回值为 never 的函数可以是无法被执行到的终止点的情况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"enum-枚举"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enum-枚举"}},[t._v("#")]),t._v(" enum 枚举")]),t._v(" "),n("p",[t._v("enum类型是对JavaScript标准数据类型的一个补充。像C#等其他语言一样，使用枚举类型可以为一组数值赋予友好的名字。")]),t._v(" "),n("p",[t._v("特点：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("默认情况下，从0开始为元素编号：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Green"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Red\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("也可以改成从指定编号开始：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Red "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Green"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Green\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("如果从中间指定编号，那么在指定编号之前按照从0开始的顺序排，没有的为undefined")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Green "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Red\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" g"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Green "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Blue "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("或者，全部都采用手动赋值：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Red "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Green "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Blue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Red "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" g"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Green "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Blue "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("枚举类型提供的一个便利是你可以由枚举的值得到它的名字。例如，我们知道数值为2，但是不确定它映射到Color里的哪个名字，我们可以查找相应的名字：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Red "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Green"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" colorName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Green")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Color "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Green "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" colorName1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Red")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" colorName2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("注意情况：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getValue")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" List "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处必须要初始化值，不然编译不通过")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])])]),n("p",[t._v("A的值是被计算出来的。注意：如果某个属性的值是被计算出来的，那么它后面一位的成员必须要初始化值。")]),t._v(" "),n("h2",{attrs:{id:"六、变量声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、变量声明"}},[t._v("#")]),t._v(" 六、变量声明")]),t._v(" "),n("h3",{attrs:{id:"_1、typescript变量的命名规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、typescript变量的命名规则"}},[t._v("#")]),t._v(" 1、TypeScript变量的命名规则")]),t._v(" "),n("ul",[n("li",[t._v("变量名称可以包含数字、字母、下划线（_）、美元符号（$），并且不能以数字开头。")])]),t._v(" "),n("h3",{attrs:{id:"_2、四种声明变量的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、四种声明变量的方式"}},[t._v("#")]),t._v(" 2、四种声明变量的方式")]),t._v(" "),n("p",[t._v("1.声明变量的类型及初始值：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("变量名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("类型"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值\n\n例：\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" uname"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),t._v("\n")])])]),n("p",[t._v("2.声明变量的类型，但没有初始值，变量值会设置为undefined:")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("变量名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("类型"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n例：\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" uname"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n")])])]),n("p",[t._v("3.声明变量并初始值，但不设置类型，该变量可以是任意类型：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("变量名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值\n\n例：\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" uname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),t._v("\n")])])]),n("p",[t._v("4.声明变量没有设置类型和初始值，类型是any任意类型，默认初始值为undefined:")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("变量名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n例：\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" uname\n")])])]),n("blockquote",[n("p",[t._v("变量不要使用name否则会与DOM中的全局window对象下的name属性出现了重名。")])]),t._v(" "),n("p",[t._v("TypeScript遵循强类型，如果将不同的类型赋值给变量会编译错误，如下实例：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个代码会编译错误")]),t._v("\n")])])]),n("p",[t._v("类型注解：是一种为变量添加类型约束的方式")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// :number 就是类型注解")]),t._v("\n")])])]),n("p",[t._v("重要：约定了什么类型，就只能给变量赋什么类型的值")]),t._v(" "),n("h3",{attrs:{id:"_3、类型推断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、类型推断"}},[t._v("#")]),t._v(" 3、类型推断")]),t._v(" "),n("p",[t._v("当类型没有给出时，TypeScript编译器利用类型推断来推断类型。")]),t._v(" "),n("p",[t._v("如果由于缺乏声明而不能推断出类型，那么它的类型被视作默认的动态any类型。")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型推断为 number")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num 变量的值为 "')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nnum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译错误")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ul",[n("li",[n("p",[t._v("第一行代码声明了变量 num 并设置初始值为 2。 注意变量声明没有指定类型。因此，程序使用类型推断来确定变量的数据类型，第一次赋值为 2，"),n("strong",[t._v("num")]),t._v(" 设置为 number 类型。")])]),t._v(" "),n("li",[n("p",[t._v("第三行代码，当我们再次为变量设置字符串类型的值时，这时编译会错误。因为变量已经设置为了 number 类型。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("error TS2322: Type "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"12\"'")]),t._v(" is not assignable to "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("如果定义的时候没有赋值，不管之后有没有赋值，都会被推断成"),n("code",[t._v("any")]),t._v("类型而完全不被类型检查：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myFavoriteNumber\nmyFavoriteNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'seven'")]),t._v("\nmyFavoriteNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n")])])]),n("p",[t._v("在TS中，某些没有明确指出类型的地方，类型推论会帮助提供类型。")]),t._v(" "),n("p",[t._v("换句话说：由于类型推论的存在，这些地方，类型注解可以省略不写！")]),t._v(" "),n("p",[t._v("发生类型推论的2种常见场景：")]),t._v(" "),n("ol",[n("li",[t._v("声明变量并初始化时")]),t._v(" "),n("li",[t._v("决定函数返回值时")])]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => let age = 18")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// =>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 说明：如果先声明变量后赋值，此时变量的类型默认是 any，可以为其赋任意的值，此时应该在声明变量时指定。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n\nn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok")]),t._v("\nn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'雅俗共赏'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok")]),t._v("\n")])])]),n("p",[t._v("注意：这两种情况下，类型注解可以省略不写！")]),t._v(" "),n("p",[t._v("推荐：能省略类型注解的地方，就省略（充分利用TS类型推论的能力，提升开发效率）")]),t._v(" "),n("p",[t._v("学习的时候，培养大家去建立类型思维；出师了，可以去繁就简。")]),t._v(" "),n("h3",{attrs:{id:"_4、变量作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、变量作用域"}},[t._v("#")]),t._v(" 4、变量作用域")]),t._v(" "),n("p",[t._v("变量作用域指定了变量定义的位置。程序中变量的可用性由变量作用域决定。")]),t._v(" "),n("p",[t._v("TypeScript有三种作用域：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("全局作用域")]),t._v(" − 全局变量定义在程序结构的外部，它可以在你代码的任何位置使用。")]),t._v(" "),n("li",[n("strong",[t._v("类作用域")]),t._v(" − 这个变量也可以称为 "),n("strong",[t._v("字段")]),t._v("。类变量声明在一个类里头，但在类的方法外面。 该变量可以通过类的对象来访问。类变量也可以是静态的，静态的变量可以通过类名直接访问。")]),t._v(" "),n("li",[n("strong",[t._v("局部作用域")]),t._v(" − 局部变量，局部变量只能在声明它的一个代码块（如：方法）中使用。")])]),t._v(" "),n("p",[t._v("例：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" global_num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局变量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Numbers")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n   num_val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例变量")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" sval "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态变量")]),t._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("storeNum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" local_num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"全局变量为: "')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("global_num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Numbers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态变量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Numbers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"实例变量: "')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("以上代码使用tsc命令编译为JavaScript代码为：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" global_num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局变量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Numbers "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @class */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Numbers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例变量")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Numbers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("storeNum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" local_num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Numbers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sval "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态变量")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Numbers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"全局变量为: "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" global_num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Numbers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态变量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Numbers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"实例变量: "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n输出结果为：\n"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("全局变量为")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("实例变量")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n\n在方法外部访问局部变量会报错：\nerror "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TS2322")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Could not find symbol "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'local_num'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),n("h3",{attrs:{id:"_5、var、let和const"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、var、let和const"}},[t._v("#")]),t._v(" 5、var、let和const")]),t._v(" "),n("h4",{attrs:{id:"var声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#var声明"}},[t._v("#")]),t._v(" "),n("code",[t._v("var")]),t._v("声明")]),t._v(" "),n("p",[t._v("作用域规则："),n("code",[t._v("var")]),t._v("声明可以在包含它的函数，模块，命名空间或全局作用域内部任何位置被访问，包含它的代码块对此没有什么影响。有些人称此为“"),n("code",[t._v("var")]),t._v("作用域或函数作用域”。函数参数也是用函数作用域。")]),t._v(" "),n("p",[t._v("这些作用域规则可能回引发一些错误。其中之一就是，多次声明同一个变量并不会报错：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sumMatrix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matrix"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" currentRow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" currentRow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" currentRow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sumMatrix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 里层循环执行完毕后，i的值为3，此时：i < matrix.length条件不成立，退出循环。")]),t._v("\n")])])]),n("p",[t._v("这里很容易看出一些问题，里层的"),n("code",[t._v("for")]),t._v("循环回覆盖变量"),n("code",[t._v("i")]),t._v("，因为所有"),n("code",[t._v("i")]),t._v("都引用相同的函数作用域内的变量。")]),t._v(" "),n("h4",{attrs:{id:"let声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#let声明"}},[t._v("#")]),t._v(" "),n("code",[t._v("let")]),t._v("声明")]),t._v(" "),n("p",[t._v("作用域规则：当使用"),n("code",[t._v("let")]),t._v("声明一个变量，它使用的是词法作用域或块作用域。不同于使用"),n("code",[t._v("var")]),t._v("声明的变量那样可以在包含它们的函数外部访问，块作用域变量在包含它们的块或"),n("code",[t._v("for")]),t._v("循环之外是不能访问的。")]),t._v(" "),n("p",[t._v("拥有块级作用域的变量的另一个特点是，它们不能在被声明之前读或写。 虽然这些变量始终“存在”于它们的作用域里，但在直到声明它的代码之前的区域都属于 "),n("em",[t._v("暂时性死区")]),t._v("。 它只是用来说明我们不能在 "),n("code",[t._v("let")]),t._v("语句之前访问它们，幸运的是TypeScript可以告诉我们这些信息。")]),t._v(" "),n("p",[t._v("在一个嵌套作用域里引入一个新名字的行为称作屏蔽。它是一把双刃剑，它可能会不小心引入新问题，同时也可能会解决一些错误。例如，假设我们现在用"),n("code",[t._v("let")]),t._v("重写之前的"),n("code",[t._v("sumMatrix")]),t._v("函数。")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sumMatrix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matrix"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" currentRow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" currentRow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" currentRow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sumMatrix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 21")]),t._v("\n")])])]),n("p",[t._v("这个版本的循环能得到正确的结果，因为内层循环的"),n("code",[t._v("i")]),t._v("可以屏蔽掉外层循环的"),n("code",[t._v("i")]),t._v("。")]),t._v(" "),n("p",[t._v("通常来将应该避免使用屏蔽，因为我们需要写出清晰的代码。同时也有些场景适合利用它，你需要好好打算一下。")]),t._v(" "),n("h4",{attrs:{id:"const声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#const声明"}},[t._v("#")]),t._v(" "),n("code",[t._v("const")]),t._v("声明")]),t._v(" "),n("p",[n("code",[t._v("const")]),t._v("声明是声明变量的另一种方式。")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n")])])]),n("p",[t._v("与"),n("code",[t._v("let")]),t._v("声明相似，它拥有与"),n("code",[t._v("let")]),t._v("相同的作用域规则，但是不能对它们重新赋值。")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" numLivesForCat "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" kitty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Aurora'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    numLives"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" numLivesForCat\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error")]),t._v("\nkitty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Danielle"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    numLives"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" numLivesForCat\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// all "okay"')]),t._v("\nkitty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rory"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nkitty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Kitty"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nkitty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cat"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nkitty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("numLives"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("const")]),t._v("变量的内部状态是可修改的。实际上，TypeScript允许你将对象的成员设置成只读的。")]),t._v(" "),n("p",[n("code",[t._v("let")]),t._v(" vs. "),n("code",[t._v("const")])]),t._v(" "),n("p",[t._v("使用"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Principle_of_least_privilege",target:"_blank",rel:"noopener noreferrer"}},[t._v("最小特权原则"),n("OutboundLink")],1),t._v("，所有变量除了你计划去修改的都应该使用"),n("code",[t._v("const")]),t._v("。 基本原则就是如果一个变量不需要对它写入，那么其它使用这些代码的人也不能够写入它们，并且要思考为什么会需要对这些变量重新赋值。 使用 "),n("code",[t._v("const")]),t._v("也可以让我们更容易的推测数据的流动。")])])}),[],!1,null,null,null);s.default=e.exports}}]);